# -*- coding: utf-8 -*-
"""hw1p1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1-gdHOi7oSFeZ29JNsTsDdDAFgWjLk7p2
"""

# Commented out IPython magic to ensure Python compatibility.
import numpy as np
import matplotlib.pyplot as plt
from matplotlib import cm
from mpl_toolkits import mplot3d
# %matplotlib inline

# Local min at (0, 0, 0)
def fLocalMin(x, y):
    return x ** 2 + y ** 2

# Local max at (0, 0, 1)
def fLocalMax(x, y):
    return np.cos(x) * np.cos(y)

# Saddle at (0, 0, 0)
def fSaddle(x, y):
    return np.sin(x * y)

# Label setup for the plots
def plotSetup(ax, str):
    ax.set_xlabel('x')
    ax.set_ylabel('y')
    ax.set_zlabel('z')
    ax.set_title(str)

# Setup for the plot
x = np.linspace(-5, 5)
y = np.linspace(-5, 5)
X, Y = np.meshgrid(x, y)

# Plot the local min
Z = fLocalMin(X, Y)
fig = plt.figure()
ax1 = plt.axes(projection='3d')
ax1.contour3D(X, Y, Z, 50, cmap='binary')
ax1.plot([0], [0], [0], color='blue', marker='o', markersize=8, alpha=1)
ax1.view_init(15, -20)
plotSetup(ax1, 'Local Min')

# Setup for the plot
x2 = np.linspace(-3, 3)
y2 = np.linspace(-3, 3)
X2, Y2 = np.meshgrid(x2, y2)

# Plot the local max
Z2 = fLocalMax(X2, Y2)
fig = plt.figure()
ax2 = plt.axes(projection='3d')
ax2.contour3D(X2, Y2, Z2, 50, cmap='binary')
ax2.plot([0], [0], [1], color='blue', marker='o', markersize=8, alpha=1)
ax2.view_init(25, -20)
plotSetup(ax2, 'Local Max')

# Setup for the plot
x3 = np.linspace(-2, 2)
y3 = np.linspace(-2, 2)
X3, Y3 = np.meshgrid(x3, y3)

# Plot the saddle point
Z = fSaddle(X3, Y3)
fig = plt.figure()
ax3 = plt.axes(projection='3d')
ax3.contour3D(X, Y, Z, 50, cmap='binary')
ax3.plot([0], [0], [0], color='blue', marker='o', markersize=8, alpha=1)
ax3.view_init(50, -10)
plotSetup(ax3, 'Saddle point')

plt.show()